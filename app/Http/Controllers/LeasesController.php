<?php
namespace App\Http\Controllers;

use App\Lease;
use Carbon\Carbon;
use App\Http\Requests;

/**
 * Services all routes starting with "/leases".
 *
 * Class LeasesController
 * @package App\Http\Controllers
 */
class LeasesController extends ApiController
{
    /**
     * Errors that can only be generated by this controller - will be merged with parents $errorList in constructor.
     *
     * @var array
     */
    protected $controllerErrors = [
        201 => ['Lease can not be terminated - it either does not exist, belongs to a different user or has already been terminated', 412],
        202 => ['Lease can not be displayed - it either does not exist, belongs to a different user or has been terminated', 404],
    ];

    /**
     * Returns a collection of all leases accessible to the user.
     *
     * @return mixed
     */
    public function index()
    {
        $leases = Lease::mine()->active()->get();
        return $this->respond($leases);
    }


    /**
     * Returns details for a specific lease.
     *
     * @param $leaseId
     * @return mixed
     */
    public function show($leaseId)
    {
        // Only show the lease if it both belongs to user + is active == accessible
        $lease = Lease::accessible($leaseId)->get()->first();

        if ($lease->count() == 0) {
            return $this->respondWithError(202);
        }

        return $this->respond($lease);
    }

    /**
     * Terminates a specific lease.
     *
     * @param $leaseId
     * @return mixed
     */
    public function terminate($leaseId)
    {
        // Only terminate the lease if it both belongs to user + is active == accessible
        $leases = Lease::accessible($leaseId)->get();

        if ($leases->count() == 0) {
            return $this->respondWithError(201);
        }

        // Terminate the lease
        $lease = $leases->first();
        $lease->expires_at = Carbon::now();
        $lease->save();

        $response = ['terminated_at' => $lease->expires_at];
        return $this->respond($response);
    }

}
